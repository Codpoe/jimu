(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{rGfa:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return o})),t.d(n,"default",(function(){return p}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var r=t("/FXl"),a=t("TjRS");t("aD51");function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/quick-start.mdx"}});var l={_frontmatter:o},b=a.a;function p(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(r.b)(b,c({},l,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"安装"},"安装"),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-shell"}),"# 使用 yarn\nyarn add redefy\n\n# 使用 npm\nnpm i redefy -S\n")),Object(r.b)("h2",{id:"\b引入"},"\b引入"),Object(r.b)("p",null,"最简单舒心的方式是先在项目的入口文件中引入全部组件的样式："),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-js"}),"import 'redefy/es/index.css';\n")),Object(r.b)("p",null,"然后就可以在项目任意地方引入组件了："),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-js"}),"import { Button } from 'redefy';\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"注意：",Object(r.b)("inlineCode",{parentName:"p"},"redefy")," 默认支持基于 ES module 的 tree shaking，对于 js 部分，直接引入",Object(r.b)("inlineCode",{parentName:"p"},"import { Button } from 'redefy'"),"也会有按需加载的效果。")),Object(r.b)("h2",{id:"按需引入"},"按需引入"),Object(r.b)("p",null,"如果比较在意应用体积，对于 css 部分也要按需引入的话，可以这样写："),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-js"}),"import { Button } from 'redefy';\nimport 'redefy/es/button/style'; // 或者 antd/es/button/style/raw 加载 less 源文件\n")),Object(r.b)("p",null,"按上面这个写法，如果要引入 n 个组件就得写 2n 条 import 语句，实在太累。如果你使用了 babel，那么可以用 ",Object(r.b)("a",c({parentName:"p"},{href:"https://github.com/ant-design/babel-plugin-import"}),"babel-plugin-import")," 来进行自动按需加载："),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-shell"}),"# 安装插件\nyarn add babel-plugin-import -D\n")),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-json"}),'// babel 配置\n{\n  "plugins": [\n    [\n      "import",\n      {\n        "libraryName": "redefy",\n        "libraryDirectory": "es",\n        "style": true\n      }\n    ]\n  ]\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-js"}),"// 直接引入组件 js 即可，babel-plugin-import 会帮忙转换\nimport { Button } from 'redefy';\n      ↓ ↓ ↓ ↓ ↓ ↓\nimport Button from 'redefy/es/button';\nimport 'redefy/es/button/style';\n")),Object(r.b)("h2",{id:"cdn-引入"},"CDN 引入"),Object(r.b)("p",null,"如果只是想写点简单的 demo，那使用",Object(r.b)("inlineCode",{parentName:"p"},"redefy"),"最简单的方式是在 html 文件中引入 CDN 链接，\n然后可以通过全局变量",Object(r.b)("inlineCode",{parentName:"p"},"redefy"),"获取到所有组件："),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-html"}),'\x3c!-- 样式文件 --\x3e\n<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/redefy@1.0.0/dist/redefy.css">\n\n\x3c!-- react --\x3e\n<script src="https://unpkg.com/react@16/umd/react.production.min.js"><\/script>\n<script src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"><\/script>\n\n\x3c!-- redefy --\x3e\n<script src="https://cdn.jsdelivr.net/npm/redefy@1.0.0/dist/redefy.min.js"><\/script>\n\n<div id="root"></div>\n\n<script>\n  // 渲染一个 Button\n  ReactDOM.render(\n    React.createElement(redefy.Button, null, \'Hello, world!\'),\n    document.getElementById(\'root\')\n  );\n\n  // 弹出一个 Toast\n  redefy.Toast.info(\'infooo\');\n<\/script>\n')))}p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/quick-start.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-quick-start-mdx-326ca8437343b775200c.js.map