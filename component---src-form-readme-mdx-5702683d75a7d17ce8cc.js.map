{"version":3,"sources":["webpack:///../src/form/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","Checkbox","Radio","Input","InputNumber","Switch","IconUser","IconLock","IconSmile","IconMeh","IconFrown","IconDollarSign","IconHeart","IconThumbsUp","React","useState","username","password","value","changeValue","labelPosition","changeLabelPosition","handleChange","useCallback","propValue","target","name","Group","onChange","style","width","Item","label","habits","mood","thumbsUp","money","validators","required","message","trigger","custom","length","min","max","prop","type","step","checked","isMDXComponent"],"mappings":"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","file":"component---src-form-readme-mdx-5702683d75a7d17ce8cc.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/youzan-yjq/Documents/my-project/my-view/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport Form from './index';\nimport Checkbox from '../checkbox/index';\nimport Radio from '../radio/index';\nimport Input from '../input/index';\nimport InputNumber from '../input-number/index';\nimport Switch from '../switch/index';\nimport { IconUser, IconLock, IconSmile, IconMeh, IconFrown, IconDollarSign, IconHeart, IconThumbsUp } from '../icon/index';\nimport './index.css';\nimport '../checkbox/index.css';\nimport '../radio/index.css';\nimport '../input/index.css';\nimport '../input-number/index.css';\nimport '../switch/index.css';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`redefy 的`}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{`组件设计比较简单，没有过多的封装。`}</p>\n    <p>{`可能你会有这样的疑问：表单的封装程度低会降低组件的易用性吧？\n在编码实践过程中，我见过一些封装程度很高的表单组件，看到这么个庞然大物，我内心是拒绝的。\n因为封装程度高、组件设计复杂，导致上手难度增加，个性化定制也会令人头疼。`}</p>\n    <p>{`例如，有的表单组件会把`}<inlineCode parentName=\"p\">{`onChange`}</inlineCode>{`事件给封装起来，以实现组件内部的一些`}<strong parentName=\"p\">{`“数据流”`}</strong>{`，看似设计感满满的，\n但这在外部使用者看来是个`}<strong parentName=\"p\">{`黑盒`}</strong>{`，如果想对这其中的某个数据进行修改，可能需要一些比较 hack 的操作，\n同时需要对组件的内部实现有一定的了解。我认为这是个糟糕的设计。`}</p>\n    <h2 {...{\n      \"id\": \"演示\"\n    }}>{`演示`}</h2>\n    <h3 {...{\n      \"id\": \"简单示例\"\n    }}>{`简单示例`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const [value, changeValue] = React.useState({\\n    username: \\'\\',\\n    password: \\'\\',\\n  })\\n  const [labelPosition, changeLabelPosition] = React.useState(\\'right\\')\\n  const handleChange = React.useCallback(\\n    (propValue, target) => {\\n      changeValue({\\n        ...value,\\n        [target.name]: propValue,\\n      })\\n    },\\n    [value],\\n  )\\n  return (\\n    <>\\n      <Radio.Group value={labelPosition} onChange={changeLabelPosition}>\\n        <Radio value=\\\"right\\\">right</Radio>\\n        <Radio value=\\\"left\\\">left</Radio>\\n        <Radio value=\\\"top\\\">top</Radio>\\n      </Radio.Group>\\n      <br />\\n      <Form\\n        style={{ width: \\'360px\\' }}\\n        value={value}\\n        labelPosition={labelPosition}\\n      >\\n        <Form.Item\\n          label={\\n            <>\\n              <IconUser /> Username\\n            </>\\n          }\\n        >\\n          <Input\\n            name=\\\"username\\\"\\n            value={value.username}\\n            onChange={handleChange}\\n          />\\n        </Form.Item>\\n        <Form.Item\\n          label={\\n            <>\\n              <IconUser /> Password\\n            </>\\n          }\\n        >\\n          <Input\\n            name=\\\"password\\\"\\n            value={value.password}\\n            onChange={handleChange}\\n          />\\n        </Form.Item>\\n      </Form>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Checkbox,\n      Radio,\n      Input,\n      InputNumber,\n      Switch,\n      IconUser,\n      IconLock,\n      IconSmile,\n      IconMeh,\n      IconFrown,\n      IconDollarSign,\n      IconHeart,\n      IconThumbsUp\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, changeValue] = React.useState({\n          username: '',\n          password: ''\n        });\n        const [labelPosition, changeLabelPosition] = React.useState('right');\n        const handleChange = React.useCallback((propValue, target) => {\n          changeValue({ ...value,\n            [target.name]: propValue\n          });\n        }, [value]);\n        return <>\n        <Radio.Group value={labelPosition} onChange={changeLabelPosition}>\n          <Radio value=\"right\" mdxType=\"Radio\">right</Radio>\n          <Radio value=\"left\" mdxType=\"Radio\">left</Radio>\n          <Radio value=\"top\" mdxType=\"Radio\">top</Radio>\n        </Radio.Group>\n        <br />\n        <Form style={{\n            width: '360px'\n          }} value={value} labelPosition={labelPosition} mdxType=\"Form\">\n          <Form.Item label={<>\n                <IconUser mdxType=\"IconUser\" /> Username\n              </>}>\n            <Input name=\"username\" value={value.username} onChange={handleChange} mdxType=\"Input\" />\n          </Form.Item>\n          <Form.Item label={<>\n                <IconUser mdxType=\"IconUser\" /> Password\n              </>}>\n            <Input name=\"password\" value={value.password} onChange={handleChange} mdxType=\"Input\" />\n          </Form.Item>\n        </Form>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"校验\"\n    }}>{`校验`}</h3>\n    <p>{`实现校验需要两步：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`实现`}<inlineCode parentName=\"li\">{`validator`}</inlineCode>{`。一般是个对象，如果需要实现多级校验，可以传递数组。`}</li>\n      <li parentName=\"ol\">{`给`}<inlineCode parentName=\"li\">{`Form.Item`}</inlineCode>{`传递`}<inlineCode parentName=\"li\">{`prop`}</inlineCode>{`属性，对应于需要校验的字段。`}</li>\n    </ol>\n    <Playground __position={1} __code={'() => {\\n  const [value, changeValue] = React.useState({\\n    username: \\'\\',\\n    password: \\'\\',\\n    habits: [],\\n    mood: \\'smile\\',\\n    thumbsUp: false,\\n    money: 100,\\n  })\\n  const handleChange = React.useCallback(\\n    (propValue, target) => {\\n      changeValue({\\n        ...value,\\n        [target.name]: propValue,\\n      })\\n    },\\n    [value],\\n  )\\n  const validators = {\\n    username: { required: true, message: \\'用户名必填\\' },\\n    password: [\\n      {\\n        required: true,\\n        message: \\'密码必填\\',\\n      },\\n      {\\n        trigger: \\'blur\\',\\n        custom(value) {\\n          if (value.length <= 6) {\\n            return \\'密码长度必须大于 6\\'\\n          }\\n        },\\n      },\\n    ],\\n    habits: { required: true, message: \\'爱好必填哦\\' },\\n    mood: {\\n      custom(value) {\\n        if (value === \\'frown\\') {\\n          return \\'要开心哦O(∩_∩)O~~\\'\\n        }\\n      },\\n    },\\n    thumbsUp: {\\n      custom(value) {\\n        if (!value) {\\n          return \\'Big brother is watching you!\\'\\n        }\\n      },\\n    },\\n    money: [\\n      { required: true, message: \\'必填\\' },\\n      { min: 0, max: 300, message: \\'知足常乐\\' },\\n    ],\\n  }\\n  return (\\n    <Form style={{ width: \\'360px\\' }} value={value} validators={validators}>\\n      <Form.Item\\n        label={\\n          <>\\n            <IconUser /> Username\\n          </>\\n        }\\n        prop=\\\"username\\\"\\n      >\\n        <Input\\n          name=\\\"username\\\"\\n          value={value.username}\\n          onChange={handleChange}\\n        />\\n      </Form.Item>\\n      <Form.Item\\n        label={\\n          <>\\n            <IconLock /> Password\\n          </>\\n        }\\n        prop=\\\"password\\\"\\n      >\\n        <Input\\n          type=\\\"password\\\"\\n          name=\\\"password\\\"\\n          value={value.password}\\n          onChange={handleChange}\\n        />\\n      </Form.Item>\\n      <Form.Item\\n        label={\\n          <>\\n            <IconDollarSign /> Money\\n          </>\\n        }\\n        prop=\\\"money\\\"\\n      >\\n        <InputNumber\\n          name=\\\"money\\\"\\n          value={value.money}\\n          step={100}\\n          onChange={handleChange}\\n        />\\n      </Form.Item>\\n      <Form.Item\\n        label={\\n          <>\\n            <IconHeart /> Habits\\n          </>\\n        }\\n        prop=\\\"habits\\\"\\n      >\\n        <Checkbox.Group\\n          name=\\\"habits\\\"\\n          value={value.habits}\\n          onChange={handleChange}\\n        >\\n          <Checkbox value=\\\"study\\\">study</Checkbox>\\n          <Checkbox value=\\\"play\\\">play</Checkbox>\\n          <Checkbox value=\\\"eat\\\">sleep</Checkbox>\\n        </Checkbox.Group>\\n      </Form.Item>\\n      <Form.Item\\n        label={\\n          <>\\n            <IconUser /> Mood\\n          </>\\n        }\\n        prop=\\\"mood\\\"\\n      >\\n        <Radio.Group name=\\\"mood\\\" value={value.mood} onChange={handleChange}>\\n          <Radio value=\\\"smile\\\">\\n            <IconSmile />\\n          </Radio>\\n          <Radio value=\\\"meh\\\">\\n            <IconMeh />\\n          </Radio>\\n          <Radio value=\\\"frown\\\">\\n            <IconFrown />\\n          </Radio>\\n        </Radio.Group>\\n      </Form.Item>\\n      <Form.Item\\n        label={\\n          <>\\n            <IconThumbsUp /> Thumbs up\\n          </>\\n        }\\n        prop=\\\"thumbsUp\\\"\\n      >\\n        <Switch\\n          name=\\\"thumbsUp\\\"\\n          checked={value.thumbsUp}\\n          onChange={handleChange}\\n        />\\n      </Form.Item>\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Checkbox,\n      Radio,\n      Input,\n      InputNumber,\n      Switch,\n      IconUser,\n      IconLock,\n      IconSmile,\n      IconMeh,\n      IconFrown,\n      IconDollarSign,\n      IconHeart,\n      IconThumbsUp\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, changeValue] = React.useState({\n          username: '',\n          password: '',\n          habits: [],\n          mood: 'smile',\n          thumbsUp: false,\n          money: 100\n        });\n        const handleChange = React.useCallback((propValue, target) => {\n          changeValue({ ...value,\n            [target.name]: propValue\n          });\n        }, [value]);\n        const validators = {\n          username: {\n            required: true,\n            message: '用户名必填'\n          },\n          password: [{\n            required: true,\n            message: '密码必填'\n          }, {\n            trigger: 'blur',\n\n            custom(value) {\n              if (value.length <= 6) {\n                return '密码长度必须大于 6';\n              }\n            }\n\n          }],\n          habits: {\n            required: true,\n            message: '爱好必填哦'\n          },\n          mood: {\n            custom(value) {\n              if (value === 'frown') {\n                return '要开心哦O(∩_∩)O~~';\n              }\n            }\n\n          },\n          thumbsUp: {\n            custom(value) {\n              if (!value) {\n                return 'Big brother is watching you!';\n              }\n            }\n\n          },\n          money: [{\n            required: true,\n            message: '必填'\n          }, {\n            min: 0,\n            max: 300,\n            message: '知足常乐'\n          }]\n        };\n        return <Form style={{\n          width: '360px'\n        }} value={value} validators={validators} mdxType=\"Form\">\n        <Form.Item label={<>\n              <IconUser mdxType=\"IconUser\" /> Username\n            </>} prop=\"username\">\n          <Input name=\"username\" value={value.username} onChange={handleChange} mdxType=\"Input\" />\n        </Form.Item>\n        <Form.Item label={<>\n              <IconLock mdxType=\"IconLock\" /> Password\n            </>} prop=\"password\">\n          <Input type=\"password\" name=\"password\" value={value.password} onChange={handleChange} mdxType=\"Input\" />\n        </Form.Item>\n        <Form.Item label={<>\n              <IconDollarSign mdxType=\"IconDollarSign\" /> Money\n            </>} prop=\"money\">\n          <InputNumber name=\"money\" value={value.money} step={100} onChange={handleChange} mdxType=\"InputNumber\" />\n        </Form.Item>\n        <Form.Item label={<>\n              <IconHeart mdxType=\"IconHeart\" /> Habits\n            </>} prop=\"habits\">\n          <Checkbox.Group name=\"habits\" value={value.habits} onChange={handleChange}>\n            <Checkbox value=\"study\" mdxType=\"Checkbox\">study</Checkbox>\n            <Checkbox value=\"play\" mdxType=\"Checkbox\">play</Checkbox>\n            <Checkbox value=\"eat\" mdxType=\"Checkbox\">sleep</Checkbox>\n          </Checkbox.Group>\n        </Form.Item>\n        <Form.Item label={<>\n              <IconUser mdxType=\"IconUser\" /> Mood\n            </>} prop=\"mood\">\n          <Radio.Group name=\"mood\" value={value.mood} onChange={handleChange}>\n            <Radio value=\"smile\" mdxType=\"Radio\">\n              <IconSmile mdxType=\"IconSmile\" />\n            </Radio>\n            <Radio value=\"meh\" mdxType=\"Radio\">\n              <IconMeh mdxType=\"IconMeh\" />\n            </Radio>\n            <Radio value=\"frown\" mdxType=\"Radio\">\n              <IconFrown mdxType=\"IconFrown\" />\n            </Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label={<>\n              <IconThumbsUp mdxType=\"IconThumbsUp\" /> Thumbs up\n            </>} prop=\"thumbsUp\">\n          <Switch name=\"thumbsUp\" checked={value.thumbsUp} onChange={handleChange} mdxType=\"Switch\" />\n        </Form.Item>\n      </Form>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"form-props\"\n    }}>{`Form Props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Record<string, any>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`值`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validators`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`Record<string, FormValidator`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`FormValidator[]>\\``}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelPosition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`right`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`top`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`right`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`标签位置`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`100px`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`标签宽度`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`32px`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`标签高度`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onSubmit`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(valid: boolean) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`提交表单事件`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类名`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.CSSProperties`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`样式`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"formvalidator\"\n    }}>{`FormValidator`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`必填`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`最小值`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`max`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`最大值`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`message`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`校验未通过的提示文案`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`trigger`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`change`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`blur`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`none`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`change`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`校验的触发时机`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`custom`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(propValue: any, value: NonNullable<FormProps['value']>) => boolean \\\\| string \\\\| undefined;`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义校验方法`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"formitem-props\"\n    }}>{`Form.Item Props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`label`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`标签`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性名`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类名`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.CSSProperties`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`样式`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"其他\"\n    }}>{`其他`}</h2>\n    <p>{`Form.Item 表单项内部可以放任意子组件，但如果想实现表单校验功能，需要根据需求在一定的时机通知表单组件进行校验操作。`}</p>\n    <p>{`具体为：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`使用`}<inlineCode parentName=\"li\">{`Form`}</inlineCode>{`组件暴露出的`}<inlineCode parentName=\"li\">{`toBeField`}</inlineCode>{`方法封装自定义的表单项组件；`}</li>\n      <li parentName=\"ol\">{`表单项组件内，根据自己的需求调用`}<inlineCode parentName=\"li\">{`props.fieldContext`}</inlineCode>{`上的`}<inlineCode parentName=\"li\">{`onChange`}</inlineCode>{`或`}<inlineCode parentName=\"li\">{`onBlur`}</inlineCode>{`方法；`}</li>\n    </ol>\n    <p>{`redefy 的`}<inlineCode parentName=\"p\">{`Checkbox`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Radio`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Input`}</inlineCode>{`等组件内部都已支持表单校验功能，以`}<inlineCode parentName=\"p\">{`Checkbox`}</inlineCode>{`组件为例：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// CheckboxGroup.tsx\n\nimport { toBeField } from 'redefy';\n\nclass CheckboxGroup extends React.Component {\n  // 数据改变的事件回调\n  handleChange = () => {\n    // ... 省略其他细节\n    this.props.fieldContext.onChange();\n  }\n}\n\nexport default toBeField(CheckboxGroup);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}