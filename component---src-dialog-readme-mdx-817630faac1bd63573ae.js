(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{XKfX:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return p})),n.d(e,"default",(function(){return j}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("mXGw"),l=n.n(a),b=n("/FXl"),r=n("TjRS"),i=n("ZFoC"),c=n("l/9D"),d=n("5+LR");n("aD51");function o(){return(o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}var p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/dialog/README.mdx"}});var O={_frontmatter:p},m=r.a;function j(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,l={},b=Object.keys(t);for(a=0;a<b.length;a++)n=b[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,["components"]);return Object(b.b)(m,o({},O,n,{components:e,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"演示"},"演示"),Object(b.b)("h3",{id:"简单示例"},"简单示例"),Object(b.b)(i.c,{__position:0,__code:'() => {\n  const [visible, setVisible] = React.useState(false)\n  return (\n    <div>\n      <Button onClick={() => setVisible(true)}>打开对话框</Button>\n      <Dialog\n        visible={visible}\n        onVisibleChange={setVisible}\n        header="提示"\n        onOk={() => setVisible(false)}\n      >\n        <div>对话框内容</div>\n        <div>对话框内容</div>\n      </Dialog>\n    </div>\n  )\n}',__scope:{props:n,DefaultLayout:r.a,Playground:i.c,Dialog:c.a,Button:d.b},mdxType:"Playground"},(function(){var t=l.a.useState(!1),e=t[0],n=t[1];return Object(b.b)("div",null,Object(b.b)(d.b,{onClick:function(){return n(!0)},mdxType:"Button"},"打开对话框"),Object(b.b)(c.a,{visible:e,onVisibleChange:n,header:"提示",onOk:function(){return n(!1)},mdxType:"Dialog"},Object(b.b)("div",null,"对话框内容"),Object(b.b)("div",null,"对话框内容")))})),Object(b.b)("h3",{id:"dialogopen"},"Dialog.open"),Object(b.b)("p",null,"对话框是相当常见的组件，并且在一个页面内可能会存在多个不同的对话框，如果每个对话框都需要通过",Object(b.b)("inlineCode",{parentName:"p"},"visible"),"和",Object(b.b)("inlineCode",{parentName:"p"},"onVisibleChange"),"来控制显示状态，那么代码写起来就很难受。\n因此为了方便使用，提供了",Object(b.b)("inlineCode",{parentName:"p"},"Dialog.open(props: DialogProps): () => void"),"静态方法，该方法返回一个可用于自行关闭对话框的函数。"),Object(b.b)(i.c,{__position:1,__code:"() => {\n  let close = () => {}\n  const handleClick = () => {\n    close = Dialog.open({\n      header: '提示',\n      children: <Button onClick={() => close()}>自行关闭对话框</Button>,\n    })\n  }\n  return <Button onClick={handleClick}>打开对话框</Button>\n}",__scope:{props:n,DefaultLayout:r.a,Playground:i.c,Dialog:c.a,Button:d.b},mdxType:"Playground"},(function(){var t=function(){};return Object(b.b)(d.b,{onClick:function(){t=c.a.open({header:"提示",children:Object(b.b)(d.b,{onClick:function(){return t()},mdxType:"Button"},"自行关闭对话框")})},mdxType:"Button"},"打开对话框")})),Object(b.b)("h2",{id:"api"},"API"),Object(b.b)("h3",{id:"props"},"Props"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",o({parentName:"tr"},{align:null}),"参数"),Object(b.b)("th",o({parentName:"tr"},{align:null}),"类型"),Object(b.b)("th",o({parentName:"tr"},{align:null}),"默认值"),Object(b.b)("th",o({parentName:"tr"},{align:null}),"说明"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"visible"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"是否显示")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"mask"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"是否显示蒙层")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"maskClosable"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"点击蒙层是否可以关闭弹窗")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"keyClosable"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"点击",Object(b.b)("inlineCode",{parentName:"td"},"esc"),"按键是否可以关闭弹窗")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"header"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"React.ReactNode")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"头部")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"footer"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"React.ReactNode")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"脚部")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"okType"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"DialogButtonType")),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"primary")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"确认按钮的类型")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"cancelType"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"DialogButtonType")),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"default")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"取消按钮的类型")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"okText"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"React.ReactNode")),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"确认")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"确认按钮的文案")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"cancelText"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"React.ReactNode")),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"取消")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"取消按钮的文案")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"okProps"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"ButtonProps")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"确认按钮的 props")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"cancelProps"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"ButtonProps")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"取消按钮的 props")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"onOk"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"() => void")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"确认按钮点击事件")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"onCancel"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"() => void")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"取消按钮点击事件")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"onVisibleChange"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"(visible: boolean) => void")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"可见性变更事件")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"onExited"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"() => void")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"关闭弹窗动画结束后触发的事件")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"className"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"类名")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"style"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"React.CSSProperties")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"样式")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"contentClassName"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"类名")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",o({parentName:"tr"},{align:null}),"contentStyle"),Object(b.b)("td",o({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"React.CSSProperties")),Object(b.b)("td",o({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",o({parentName:"tr"},{align:null}),"样式")))))}j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/dialog/README.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-dialog-readme-mdx-817630faac1bd63573ae.js.map