(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"KQ+6":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return N})),t.d(n,"default",(function(){return C}));t("5hJT"),t("2Tod"),t("ABKx"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk"),t("GkPX");var a=t("mXGw"),r=t.n(a),b=t("/FXl"),l=t("TjRS"),o=t("ZFoC"),c=t("lCko"),m=t("dxAt"),i=t("IO2o"),p=t("pbfU"),u=t("PzRH"),d=t("Ng0G"),O=t("T/ex");t("aD51");function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function j(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function g(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?j(Object(t),!0).forEach((function(n){h(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):j(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function h(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var N={};void 0!==N&&N&&N===Object(N)&&Object.isExtensible(N)&&!N.hasOwnProperty("__filemeta")&&Object.defineProperty(N,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/form/README.mdx"}});var y={_frontmatter:N},I=l.a;function C(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)t=b[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(b.b)(I,s({},y,t,{components:n,mdxType:"MDXLayout"}),Object(b.b)("p",null,"redefy 的",Object(b.b)("inlineCode",{parentName:"p"},"Form"),"组件设计比较简单，没有过多的封装。"),Object(b.b)("p",null,"可能你会有这样的疑问：表单的封装程度低会降低组件的易用性吧？\n在编码实践过程中，我见过一些封装程度很高的表单组件，看到这么个庞然大物，我内心是拒绝的。\n因为封装程度高、组件设计复杂，导致上手难度增加，个性化定制也会令人头疼。"),Object(b.b)("p",null,"例如，有的表单组件会把",Object(b.b)("inlineCode",{parentName:"p"},"onChange"),"事件给封装起来，以实现组件内部的一些",Object(b.b)("strong",{parentName:"p"},"“数据流”"),"，看似设计感满满的，\n但这在外部使用者看来是个",Object(b.b)("strong",{parentName:"p"},"黑盒"),"，如果想对这其中的某个数据进行修改，可能需要一些比较 hack 的操作，\n同时需要对组件的内部实现有一定的了解。我认为这是个糟糕的设计。"),Object(b.b)("h2",{id:"演示"},"演示"),Object(b.b)("h3",{id:"简单示例"},"简单示例"),Object(b.b)(o.c,{__position:0,__code:'() => {\n  const [value, changeValue] = React.useState({\n    username: \'\',\n    password: \'\',\n  })\n  const [labelPosition, changeLabelPosition] = React.useState(\'right\')\n  const handleChange = React.useCallback(\n    (propValue, target) => {\n      changeValue({\n        ...value,\n        [target.name]: propValue,\n      })\n    },\n    [value],\n  )\n  return (\n    <>\n      <Radio.Group value={labelPosition} onChange={changeLabelPosition}>\n        <Radio value="right">right</Radio>\n        <Radio value="left">left</Radio>\n        <Radio value="top">top</Radio>\n      </Radio.Group>\n      <br />\n      <Form\n        style={{ width: \'360px\' }}\n        value={value}\n        labelPosition={labelPosition}\n      >\n        <Form.Item\n          label={\n            <>\n              <IconUser /> Username\n            </>\n          }\n        >\n          <Input\n            name="username"\n            value={value.username}\n            onChange={handleChange}\n          />\n        </Form.Item>\n        <Form.Item\n          label={\n            <>\n              <IconUser /> Password\n            </>\n          }\n        >\n          <Input\n            name="password"\n            value={value.password}\n            onChange={handleChange}\n          />\n        </Form.Item>\n      </Form>\n    </>\n  )\n}',__scope:{props:t,DefaultLayout:l.a,Playground:o.c,Form:c.a,Checkbox:m.a,Radio:i.a,Input:p.a,InputNumber:u.a,Switch:d.a,IconUser:O.IconUser,IconLock:O.IconLock,IconSmile:O.IconSmile,IconMeh:O.IconMeh,IconFrown:O.IconFrown,IconDollarSign:O.IconDollarSign,IconHeart:O.IconHeart,IconThumbsUp:O.IconThumbsUp},mdxType:"Playground"},(function(){var e=r.a.useState({username:"",password:""}),n=e[0],t=e[1],a=r.a.useState("right"),l=a[0],o=a[1],m=r.a.useCallback((function(e,a){var r;t(g({},n,((r={})[a.name]=e,r)))}),[n]);return Object(b.b)(r.a.Fragment,null,Object(b.b)(i.a.Group,{value:l,onChange:o},Object(b.b)(i.a,{value:"right",mdxType:"Radio"},"right"),Object(b.b)(i.a,{value:"left",mdxType:"Radio"},"left"),Object(b.b)(i.a,{value:"top",mdxType:"Radio"},"top")),Object(b.b)("br",null),Object(b.b)(c.a,{style:{width:"360px"},value:n,labelPosition:l,mdxType:"Form"},Object(b.b)(c.a.Item,{label:Object(b.b)(r.a.Fragment,null,Object(b.b)(O.IconUser,{mdxType:"IconUser"})," Username")},Object(b.b)(p.a,{name:"username",value:n.username,onChange:m,mdxType:"Input"})),Object(b.b)(c.a.Item,{label:Object(b.b)(r.a.Fragment,null,Object(b.b)(O.IconUser,{mdxType:"IconUser"})," Password")},Object(b.b)(p.a,{name:"password",value:n.password,onChange:m,mdxType:"Input"}))))})),Object(b.b)("h3",{id:"校验"},"校验"),Object(b.b)("p",null,"实现校验需要两步："),Object(b.b)("ol",null,Object(b.b)("li",{parentName:"ol"},"实现",Object(b.b)("inlineCode",{parentName:"li"},"validator"),"。一般是个对象，如果需要实现多级校验，可以传递数组。"),Object(b.b)("li",{parentName:"ol"},"给",Object(b.b)("inlineCode",{parentName:"li"},"Form.Item"),"传递",Object(b.b)("inlineCode",{parentName:"li"},"prop"),"属性，对应于需要校验的字段。")),Object(b.b)(o.c,{__position:1,__code:'() => {\n  const [value, changeValue] = React.useState({\n    username: \'\',\n    password: \'\',\n    habits: [],\n    mood: \'smile\',\n    thumbsUp: false,\n    money: 100,\n  })\n  const handleChange = React.useCallback(\n    (propValue, target) => {\n      changeValue({\n        ...value,\n        [target.name]: propValue,\n      })\n    },\n    [value],\n  )\n  const validators = {\n    username: { required: true, message: \'用户名必填\' },\n    password: [\n      {\n        required: true,\n        message: \'密码必填\',\n      },\n      {\n        trigger: \'blur\',\n        custom(value) {\n          if (value.length <= 6) {\n            return \'密码长度必须大于 6\'\n          }\n        },\n      },\n    ],\n    habits: { required: true, message: \'爱好必填哦\' },\n    mood: {\n      custom(value) {\n        if (value === \'frown\') {\n          return \'要开心哦O(∩_∩)O~~\'\n        }\n      },\n    },\n    thumbsUp: {\n      custom(value) {\n        if (!value) {\n          return \'Big brother is watching you!\'\n        }\n      },\n    },\n    money: [\n      { required: true, message: \'必填\' },\n      { min: 0, max: 300, message: \'知足常乐\' },\n    ],\n  }\n  return (\n    <Form style={{ width: \'360px\' }} value={value} validators={validators}>\n      <Form.Item\n        label={\n          <>\n            <IconUser /> Username\n          </>\n        }\n        prop="username"\n      >\n        <Input\n          name="username"\n          value={value.username}\n          onChange={handleChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={\n          <>\n            <IconLock /> Password\n          </>\n        }\n        prop="password"\n      >\n        <Input\n          type="password"\n          name="password"\n          value={value.password}\n          onChange={handleChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={\n          <>\n            <IconDollarSign /> Money\n          </>\n        }\n        prop="money"\n      >\n        <InputNumber\n          name="money"\n          value={value.money}\n          step={100}\n          onChange={handleChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={\n          <>\n            <IconHeart /> Habits\n          </>\n        }\n        prop="habits"\n      >\n        <Checkbox.Group\n          name="habits"\n          value={value.habits}\n          onChange={handleChange}\n        >\n          <Checkbox value="study">Study</Checkbox>\n          <Checkbox value="play">Play</Checkbox>\n          <Checkbox value="eat">Sleep</Checkbox>\n        </Checkbox.Group>\n      </Form.Item>\n      <Form.Item\n        label={\n          <>\n            <IconUser /> Mood\n          </>\n        }\n        prop="mood"\n      >\n        <Radio.Group name="mood" value={value.mood} onChange={handleChange}>\n          <Radio value="smile">\n            <IconSmile />\n          </Radio>\n          <Radio value="meh">\n            <IconMeh />\n          </Radio>\n          <Radio value="frown">\n            <IconFrown />\n          </Radio>\n        </Radio.Group>\n      </Form.Item>\n      <Form.Item\n        label={\n          <>\n            <IconThumbsUp /> Thumbs up\n          </>\n        }\n        prop="thumbsUp"\n      >\n        <Switch\n          name="thumbsUp"\n          checked={value.thumbsUp}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    </Form>\n  )\n}',__scope:{props:t,DefaultLayout:l.a,Playground:o.c,Form:c.a,Checkbox:m.a,Radio:i.a,Input:p.a,InputNumber:u.a,Switch:d.a,IconUser:O.IconUser,IconLock:O.IconLock,IconSmile:O.IconSmile,IconMeh:O.IconMeh,IconFrown:O.IconFrown,IconDollarSign:O.IconDollarSign,IconHeart:O.IconHeart,IconThumbsUp:O.IconThumbsUp},mdxType:"Playground"},(function(){var e=r.a.useState({username:"",password:"",habits:[],mood:"smile",thumbsUp:!1,money:100}),n=e[0],t=e[1],a=r.a.useCallback((function(e,a){var r;t(g({},n,((r={})[a.name]=e,r)))}),[n]);return Object(b.b)(c.a,{style:{width:"360px"},value:n,validators:{username:{required:!0,message:"用户名必填"},password:[{required:!0,message:"密码必填"},{trigger:"blur",custom:function(e){if(e.length<=6)return"密码长度必须大于 6"}}],habits:{required:!0,message:"爱好必填哦"},mood:{custom:function(e){if("frown"===e)return"要开心哦O(∩_∩)O~~"}},thumbsUp:{custom:function(e){if(!e)return"Big brother is watching you!"}},money:[{required:!0,message:"必填"},{min:0,max:300,message:"知足常乐"}]},mdxType:"Form"},Object(b.b)(c.a.Item,{label:Object(b.b)(r.a.Fragment,null,Object(b.b)(O.IconUser,{mdxType:"IconUser"})," Username"),prop:"username"},Object(b.b)(p.a,{name:"username",value:n.username,onChange:a,mdxType:"Input"})),Object(b.b)(c.a.Item,{label:Object(b.b)(r.a.Fragment,null,Object(b.b)(O.IconLock,{mdxType:"IconLock"})," Password"),prop:"password"},Object(b.b)(p.a,{type:"password",name:"password",value:n.password,onChange:a,mdxType:"Input"})),Object(b.b)(c.a.Item,{label:Object(b.b)(r.a.Fragment,null,Object(b.b)(O.IconDollarSign,{mdxType:"IconDollarSign"})," Money"),prop:"money"},Object(b.b)(u.a,{name:"money",value:n.money,step:100,onChange:a,mdxType:"InputNumber"})),Object(b.b)(c.a.Item,{label:Object(b.b)(r.a.Fragment,null,Object(b.b)(O.IconHeart,{mdxType:"IconHeart"})," Habits"),prop:"habits"},Object(b.b)(m.a.Group,{name:"habits",value:n.habits,onChange:a},Object(b.b)(m.a,{value:"study",mdxType:"Checkbox"},"Study"),Object(b.b)(m.a,{value:"play",mdxType:"Checkbox"},"Play"),Object(b.b)(m.a,{value:"eat",mdxType:"Checkbox"},"Sleep"))),Object(b.b)(c.a.Item,{label:Object(b.b)(r.a.Fragment,null,Object(b.b)(O.IconUser,{mdxType:"IconUser"})," Mood"),prop:"mood"},Object(b.b)(i.a.Group,{name:"mood",value:n.mood,onChange:a},Object(b.b)(i.a,{value:"smile",mdxType:"Radio"},Object(b.b)(O.IconSmile,{mdxType:"IconSmile"})),Object(b.b)(i.a,{value:"meh",mdxType:"Radio"},Object(b.b)(O.IconMeh,{mdxType:"IconMeh"})),Object(b.b)(i.a,{value:"frown",mdxType:"Radio"},Object(b.b)(O.IconFrown,{mdxType:"IconFrown"})))),Object(b.b)(c.a.Item,{label:Object(b.b)(r.a.Fragment,null,Object(b.b)(O.IconThumbsUp,{mdxType:"IconThumbsUp"})," Thumbs up"),prop:"thumbsUp"},Object(b.b)(d.a,{name:"thumbsUp",checked:n.thumbsUp,onChange:a,mdxType:"Switch"})))})),Object(b.b)("h2",{id:"api"},"API"),Object(b.b)("h3",{id:"form-props"},"Form Props"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",s({parentName:"tr"},{align:null}),"参数"),Object(b.b)("th",s({parentName:"tr"},{align:null}),"类型"),Object(b.b)("th",s({parentName:"tr"},{align:null}),"默认值"),Object(b.b)("th",s({parentName:"tr"},{align:null}),"说明"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"value"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"Record<string, any>")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"值")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"validators"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"`Record<string, FormValidator"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"FormValidator[]>`"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"labelPosition"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"left"),", ",Object(b.b)("inlineCode",{parentName:"td"},"right"),", ",Object(b.b)("inlineCode",{parentName:"td"},"top")),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"right")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"标签位置")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"labelWidth"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"number"),", ",Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"100px")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"标签宽度")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"labelHeight"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"number"),", ",Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"32px")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"标签高度")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"onSubmit"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"(valid: boolean) => void")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"提交表单事件")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"className"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"类名")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"style"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"React.CSSProperties")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"样式")))),Object(b.b)("h3",{id:"formvalidator"},"FormValidator"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",s({parentName:"tr"},{align:null}),"参数"),Object(b.b)("th",s({parentName:"tr"},{align:null}),"类型"),Object(b.b)("th",s({parentName:"tr"},{align:null}),"默认值"),Object(b.b)("th",s({parentName:"tr"},{align:null}),"说明"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"required"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"必填")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"min"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"number")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"最小值")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"max"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"number")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"最大值")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"message"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"校验未通过的提示文案")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"trigger"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"change"),", ",Object(b.b)("inlineCode",{parentName:"td"},"blur"),", ",Object(b.b)("inlineCode",{parentName:"td"},"none")),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"change")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"校验的触发时机")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"custom"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"(propValue: any, value: NonNullable<FormProps['value']>) => boolean \\| string \\| undefined;")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"自定义校验方法")))),Object(b.b)("h3",{id:"formitem-props"},"Form.Item Props"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",s({parentName:"tr"},{align:null}),"参数"),Object(b.b)("th",s({parentName:"tr"},{align:null}),"类型"),Object(b.b)("th",s({parentName:"tr"},{align:null}),"默认值"),Object(b.b)("th",s({parentName:"tr"},{align:null}),"说明"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"label"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"React.ReactNode")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"标签")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"prop"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"属性名")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"className"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"类名")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",s({parentName:"tr"},{align:null}),"style"),Object(b.b)("td",s({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"React.CSSProperties")),Object(b.b)("td",s({parentName:"tr"},{align:null}),"-"),Object(b.b)("td",s({parentName:"tr"},{align:null}),"样式")))),Object(b.b)("h2",{id:"其他"},"其他"),Object(b.b)("p",null,"Form.Item 表单项内部可以放任意子组件，但如果想实现表单校验功能，需要根据需求在一定的时机通知表单组件进行校验操作。"),Object(b.b)("p",null,"具体为："),Object(b.b)("ol",null,Object(b.b)("li",{parentName:"ol"},"使用",Object(b.b)("inlineCode",{parentName:"li"},"Form"),"组件暴露出的",Object(b.b)("inlineCode",{parentName:"li"},"toBeField"),"方法封装自定义的表单项组件；"),Object(b.b)("li",{parentName:"ol"},"表单项组件内，根据自己的需求调用",Object(b.b)("inlineCode",{parentName:"li"},"props.fieldContext"),"上的",Object(b.b)("inlineCode",{parentName:"li"},"onChange"),"或",Object(b.b)("inlineCode",{parentName:"li"},"onBlur"),"方法；")),Object(b.b)("p",null,"redefy 的",Object(b.b)("inlineCode",{parentName:"p"},"Checkbox"),", ",Object(b.b)("inlineCode",{parentName:"p"},"Radio"),", ",Object(b.b)("inlineCode",{parentName:"p"},"Input"),"等组件内部都已支持表单校验功能，以",Object(b.b)("inlineCode",{parentName:"p"},"Checkbox"),"组件为例："),Object(b.b)("pre",null,Object(b.b)("code",s({parentName:"pre"},{className:"language-jsx"}),"// CheckboxGroup.tsx\n\nimport { toBeField } from 'redefy';\n\nclass CheckboxGroup extends React.Component {\n  // 数据改变的事件回调\n  handleChange = () => {\n    // ... 省略其他细节\n    this.props.fieldContext.onChange();\n  }\n}\n\nexport default toBeField(CheckboxGroup);\n")))}C&&C===Object(C)&&Object.isExtensible(C)&&!C.hasOwnProperty("__filemeta")&&Object.defineProperty(C,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/form/README.mdx"}}),C.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-form-readme-mdx-7707395f8e22c0eafeeb.js.map