{"version":3,"sources":["webpack:///../src/toast/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Toast","Button","onClick","info","success","warning","error","parentName","isMDXComponent"],"mappings":"iiBAWO,IAAMA,EAAe,Q,sMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,MADR,MAGA,iBAAQ,CACN,GAAM,QADR,QAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,6QAA4RC,QAAS,CACtUJ,QACAH,kBACAQ,eACAC,UACAC,YACCN,QAAQ,cACb,YAAC,IAAD,CAAQO,QAAS,kBAAMF,IAAMG,KAAK,SAASR,QAAQ,UAAnD,QAA0E,IAC1E,YAAC,IAAD,CAAQO,QAAS,kBAAMF,IAAMI,QAAQ,YAAYT,QAAQ,UAAzD,WAAmF,IACnF,YAAC,IAAD,CAAQO,QAAS,kBAAMF,IAAMK,QAAQ,YAAYV,QAAQ,UAAzD,WAAmF,IACnF,YAAC,IAAD,CAAQO,QAAS,kBAAMF,IAAMM,MAAM,UAAUX,QAAQ,UAArD,UAEE,iBAAQ,CACN,GAAM,OADR,OAGA,iBAAQ,CACN,GAAM,aADR,aAGA,qBAAG,0BAAYY,WAAW,KAAvB,eACH,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,4GAIL,qBAAG,0BAAYA,WAAW,KAAvB,cAAH,KAA+D,0BAAYA,WAAW,KAAvB,iBAA/D,KAA8H,0BAAYA,WAAW,KAAvB,iBAA9H,KAA6L,0BAAYA,WAAW,KAAvB,gBAC7L,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6D,6LAQTf,EAAWgB,gBAAiB","file":"component---src-toast-readme-mdx-1e87b783a6386b1de5ef.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/youzan-yjq/Documents/my-project/my-view/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport Toast from './index';\nimport Button from '../button/index';\nimport './index.css';\nimport '../button/index.css';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"演示\"\n    }}>{`演示`}</h2>\n    <h3 {...{\n      \"id\": \"简单示例\"\n    }}>{`简单示例`}</h3>\n    <Playground __position={0} __code={'<Button onClick={() => Toast.info(\\'Info\\')}>Info</Button>{\\' \\'}\\n<Button onClick={() => Toast.success(\\'Success\\')}>Success</Button>{\\' \\'}\\n<Button onClick={() => Toast.warning(\\'Warning\\')}>Warning</Button>{\\' \\'}\\n<Button onClick={() => Toast.error(\\'Error\\')}>Error</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Toast,\n      Button\n    }} mdxType=\"Playground\">\n  <Button onClick={() => Toast.info('Info')} mdxType=\"Button\">Info</Button>{' '}\n  <Button onClick={() => Toast.success('Success')} mdxType=\"Button\">Success</Button>{' '}\n  <Button onClick={() => Toast.warning('Warning')} mdxType=\"Button\">Warning</Button>{' '}\n  <Button onClick={() => Toast.error('Error')} mdxType=\"Button\">Error</Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"toast-fns\"\n    }}>{`Toast Fns`}</h3>\n    <p><inlineCode parentName=\"p\">{`Toast.show`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`(type: 'info' | 'success' | 'warning' | 'error', content: React.ReactNode, duration?: number) => void\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Toast.info`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Toast.success`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Toast.warning`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Toast.error`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`(content: React.ReactNode, duration?: number) => void\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}